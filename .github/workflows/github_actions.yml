name: Go App Deploy to EKS 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.29.2' # default is latest stable
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: il-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
  

    # - name: Build, tag, and push docker image to Amazon ECR
    #   env:
    #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     REPOSITORY: tracker-app
    #   run: |
        
    #     cd backend_server_mutex
    #     docker build . -f Dockerfile -t $REGISTRY/$REPOSITORY:backend_mutex
    #     docker push $REGISTRY/$REPOSITORY:backend_mutex
    #     cd .. 

    #     cd http_server
    #     docker build . -f Dockerfile -t $REGISTRY/$REPOSITORY:http_server 
    #     docker push $REGISTRY/$REPOSITORY:http_server
    #     cd .. 

    #     cd backend_server
    #     docker build . -f Dockerfile -t $REGISTRY/$REPOSITORY:backend-1 
    #     docker push $REGISTRY/$REPOSITORY:backend-1
    #     cd .. 

    #     cd backend_server_high_alloc
    #     docker build . -f Dockerfile -t $REGISTRY/$REPOSITORY:backend_high_alloc 
    #     docker push $REGISTRY/$REPOSITORY:backend_high_alloc
    #     cd .. 

    #     cd backend_server_high_cpu
    #     docker build . -f Dockerfile -t $REGISTRY/$REPOSITORY:backend_high_cpu 
    #     docker push $REGISTRY/$REPOSITORY:backend_high_cpu
    #     cd .. 

    #     cd backend_server_high_heap
    #     docker build . -f Dockerfile -t $REGISTRY/$REPOSITORY:backend_high_heap 
    #     docker push $REGISTRY/$REPOSITORY:backend_high_heap
    #     cd .. 





    - name: Update kube config
      run: aws eks update-kubeconfig --region il-central-1 --name sinsandbox
    
    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/output/http-deployment.yaml
        kubectl apply -f k8s/output/http-service.yaml

        kubectl apply -f k8s/output/backend-main-deployment.yaml
        kubectl apply -f k8s/output/backend-main-service.yaml

        kubectl apply -f k8s/output/mysql-deployment.yaml
        kubectl apply -f k8s/output/mysql-service.yaml
        kubectl apply -f k8s/output/mysql-claim0-persistentvolumeclaim.yaml
        kubectl apply -f k8s/output/mysql-claim1-persistentvolumeclaim.yaml
        
        kubectl apply -f k8s/output/backend-high-cpu-deployment.yaml
        kubectl apply -f k8s/output/backend-high-cpu-service.yaml

        kubectl apply -f k8s/output/backend-high-alloc-deployment.yaml
        kubectl apply -f k8s/output/backend-high-alloc-service.yaml

        kubectl apply -f k8s/output/backend-high-heap-deployment.yaml
        kubectl apply -f k8s/output/backend-high-heap-service.yaml

        kubectl apply -f k8s/output/backend-mutex-deployment.yaml
        kubectl apply -f k8s/output/backend-mutex-service.yaml